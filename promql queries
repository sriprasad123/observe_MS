PromQL queries:

Overall pod status:
count(kube_pod_info{namespace="namespace"})

To check the running pods: 
#kubelet_running_pod_count{namespace="default"}
sum by (namespace) (kube_pod_status_ready{condition="false"})


TO check the cpu utilization:
sum by (pod_name) (irate(container_cpu_usage_seconds_total{container_name!="POD"}[5m])) * 100 > 80

to check the readiness probe
sum(kube_pod_container_status_ready{pod="my-pod",container="my-container",condition="true"}) / count(kube_pod_container_status_ready{pod="my-pod",container="my-container"})

{{ timestamp | timestamp_custom("YYYY-MM-DD HH:mm:ss") }}


kube_pod_container_status_restarts_total{namespace="<namespace>", pod="<pod-name>", container="<container-name>", restart_reason="LivenessProbe"}

strftime("%Y-%m-%d %H:%M:%S", datetime($__value.time, 'unixepoch', 'local'))


import datetime

def convert_timestamp(timestamp):
    datetime_object = datetime.datetime.fromtimestamp(timestamp)
    human_readable = datetime_object.strftime('%Y-%m-%d %H:%M:%S')
    return human_readable
    
    
   
prober_config:
      http:
        valid_http_versions: ["HTTP/1.1", "HTTP/2"]
        headers:
          User-Agent: "BlackboxExporter"
        valid_http_versions: ["HTTP/1.1", "HTTP/2"]
      script:
        path: "/path/to/convert_timestamp.py"
        args: [probe_ssl_earliest_cert_expiry]
    targets:
      - example.com
